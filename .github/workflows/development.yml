name: React Production CI

on:
  push:
    # branches: ["development"]
    branches: ["dev"]

jobs:
  Deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: yarn install

    - name: Build React app with environment variables
      env:
        VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
        VITE_AUTH_URL: ${{ secrets.VITE_AUTH_URL }}
        VITE_KEYCLOAK_CLIENT_ID: ${{ secrets.VITE_KEYCLOAK_CLIENT_ID }}
        VITE_KEYCLOAK_ISSUER: ${{ secrets.VITE_KEYCLOAK_ISSUER }}
        VITE_REFRESH_TOKEN_URL: ${{ secrets.VITE_REFRESH_TOKEN_URL }}
        VITE_KEYCLOAK_URL: ${{ secrets.VITE_KEYCLOAK_URL }}
        VITE_GOOGLE_MAPS_API_KEY: ${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}
        VITE_JWT_SECRET: ${{ secrets.VITE_JWT_SECRET }}
        VITE_CHATBOT_URL: ${{ secrets.VITE_CHATBOT_URL }}
        VITE_CHATBOT_ID: ${{ secrets.VITE_CHATBOT_ID }}
        VITE_CHATBOT_ID_SENDER: ${{ secrets.VITE_CHATBOT_ID_SENDER }}
        VITE_APP_VAPID_KEY: ${{ secrets.VITE_APP_VAPID_KEY }}
      run: yarn build --mode development

    - name: Transfer build files to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DEV_HOST }}
        username: ${{ secrets.DEV_USERNAME }}
        key: ${{ secrets.DEV_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        source: "dist/*"
        target: "/home/fredy/sana/sana_web"

    - name: Deploy to development server via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEV_HOST }}
        username: ${{ secrets.DEV_USERNAME }}
        password: ${{ secrets.DEV_PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          cd /home/fredy/sana/sana_web
          git add .
          git stash
          git checkout development
          git pull origin development
          sudo docker network inspect proxy_network >/dev/null 2>&1 || sudo docker network create proxy_network
          sudo docker compose -f docker-compose.dev.yml down
          sudo docker compose -f docker-compose.dev.yml up -d --build --remove-orphans